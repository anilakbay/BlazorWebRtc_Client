@page "/"
@using BlazorWebRtc_Blazor.Models.Request
@using BlazorWebRtc_Blazor.Models.Response
@using BlazorWebRtc_Blazor.Services.Abstract
@using BlazorWebRtc_Blazor.Shared
@inject IUserInfoService userInfoService
@inject IRequestService requestService
@inject IJSRuntime JS
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Friendship App</title>
    <style>


        body {
            background-color: #f0f8ff;
            color: #333;
        }



        .banner {
            text-align: center;
            background: url('https://www.infosys.com/content/dam/infosys-web/en/australia/digital-accessibility-journey/images/people-holding-speech-bubbles.png') no-repeat center center;
            background-size: cover;
            padding: 4rem 0;
            color: white;
        }

            .banner h1 {
                font-size: 2.5rem;
                margin-bottom: 1rem;
            }

            .banner button {
                background-color: #28a745;
                color: white;
                border: none;
                padding: 0.75rem 1.5rem;
                font-size: 1rem;
                cursor: pointer;
                border-radius: 5px;
            }

                .banner button:hover {
                    background-color: #218838;
                }

        .suggested-friends {
            padding: 2rem;
            text-align: center;
        }

            .suggested-friends h2 {
                font-size: 2rem;
                margin-bottom: 2rem;
            }

        .friend-card {
            display: inline-block;
            width: 200px;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin: 1rem;
            padding: 1rem;
            text-align: center;
        }

            .friend-card img {
                border-radius: 50%;
                width: 100px;
                height: 100px;
                margin-bottom: 1rem;
            }

            .friend-card h3 {
                font-size: 1.25rem;
                margin-bottom: 0.5rem;
            }

            .friend-card p {
                font-size: 0.9rem;
                color: #666;
            }

            .btn-success {
                background-color:#28a745;
                color:#fff;
                border:none;
                padding:10px 20px;
                font-size:16px;
                cursor:pointer;
                transition: ease
            }

            .btn-success:hover{
                background-color:#218838;
                box-shadow:0 4px 12px rgba(0,0,0,0.2)
            }

        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            max-width: 500px;
            width: 100%;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

            .modal-content img {
                width: 100px;
                height: 100px;
                border-radius: 50%;
                margin-bottom: 15px;
            }

            .modal-content h2 {
                margin-bottom: 15px;
            }

            .modal-content p {
                margin-bottom: 20px;
            }

        .btn-danger {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .btn-danger:hover {
                background-color: #c82333;
            }

        .btn-warning {
            background-color: #FFFF00;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .btn-warning:hover {
                background-color: #FFFF00;
            }
    </style>
</head>
<body>

    <Header />
    <section class="banner">
        <h1>Welcome to Friendship App</h1>
        <button>Find New Friends</button>
    </section>

    <section class="suggested-friends">
        <h2>Suggested Friends</h2>
        
        @foreach (var friend in responseDtoModel)
        {
            <div class="friend-card">
                <img src="@GetProfilePicture(friend.ProfilePicture)" alt="Friend 1">
                <h3>@friend.UserName</h3>
                <p>Love hiking and exploring new places.</p>
                <button class="btn btn-success"@onclick="()=>OpenModal(friend)" >Detail</button>
            </div>
        }
        


       @if(isModalVisible)
        {
            <div class="modal-overlay" >
                <div class="modal-content" >
                    <h2> @selectedDTO.UserName </h2>
                    <img src="@GetProfilePicture(selectedDTO.ProfilePicture)" />
                    <p>More details about @selectedDTO.UserName</p>
                    <button class="btn btn-danger" @onclick="CloseModal">Close Modal</button>
                    <button class="btn btn-warning" @onclick="SendRequest" >Request Friend</button>
                </div>
            </div>
        }
   
    </section>



</body>
</html>

@code {
    List<UserDTOResponseModel> responseDtoModel = new List<UserDTOResponseModel>();
    UserDTOResponseModel selectedDTO = new UserDTOResponseModel();

    private bool isModalVisible = false;

    private void OpenModal(UserDTOResponseModel dto)
    {
        selectedDTO = dto;
        isModalVisible = true;
    }


    private async Task<bool> SendRequest()
    {
        RequestFriendShipCommand sendCommand = new RequestFriendShipCommand();
        sendCommand.ReceiverUserId = selectedDTO.UserId;
        sendCommand.Status = Status.pending;
        var result = await requestService.SendFriendshipRequest(sendCommand);
        if (result.isSuccess)
        {
            await JS.InvokeVoidAsync("toastrNotify", "success", "Friendship request sended", "Success Process");
        }
        CloseModal();
        return result.isSuccess;
    }


    private void CloseModal()
    {
        isModalVisible = false;
    }

    protected override async Task OnInitializedAsync()
    {
        responseDtoModel = await userInfoService.GetUserList();


    }

    private string GetProfilePicture(string profilePicturePath)
    {
        return $"https://192.168.1.190:7282/{profilePicturePath}";
    }

}